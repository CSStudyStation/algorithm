算法面试准备范围

不要轻视基础算法和数据结构，而只关注“有意思”的题目
1. 各种排序算法，其特点和比较
2. 基础数据结构和算法的实现
    * 如堆、二叉树、图……
3. 基础数据结构的使用
    * 如链表、栈、队列、哈希表、图、Tire、并查集……
4. 基础算法
    * 深度优先、广度优先、二分查找、递归……
5. 基础算法思想
    * 递归、分治、回溯搜索、贪心、动态规划……


示例：
（inter）初始序列为 1，8，6，2，5，4，7，3 的一组采用堆排序，当建堆（小根堆）完毕时，堆所对应的二叉树中序遍历序列为：（ A ）
A. 8，3，2，5，1，6，4，7
B. 3，2，8，5，1，4，6，7
C. 3，8，2，5，1，6，7，4
D. 8，2，3，5，1，4，7，6

示例
（乐视）对一个含有 20 个元素的有序数组 A 做二分查找，数组起始下标为 1，则查找 A[2] 的比较序列的下标为：（ B ）
A. 9、5、4、2
B. 10、5、2
C. 9、6、2
D. 20、10、5、3、2

示例
（阿里）一组记录排序码为（5、11、7、2、3、17），则利用堆排序方法建立的初始堆为（ C ）
A. （11、5、7、2、3、17）
B. （11、5、7、2、17、3）
C. （17、11、7、2、3、5）
D. （17、11、7、5、3、2）
E. （17、7、11、3、5、2）
F. （17、7、11、3、2、5）

示例
（百度）在图中采用邻接表存储时，求最小生成树的 Prim 算法的时间复杂度为（）
A. O(n)
B. O(n+e)
C. O(N^2)
D. O(N^3)


选择合适的 OJ（online judge，在线判题系统）
不要选择过于偏向程序设计竞赛的 OJ
* codeforces（俄罗斯）
* topcoder（美国）
* codechef（印度）

适合面试的 OJ
* LeetCode（Online Portal for IT Interview）；真实的面试问题
* HackerRank（Revolutionizing Tech Recruiting）；对问题的分类很详细
